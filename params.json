{"name":"Sencha Touch Live","tagline":"Live edit your Sencha Touch apps directly into your devices and emulators.  Massively speeds up hybrid app development.","body":"## Live edit native **Sencha Touch** apps with full **PhoneGap/Cordova** plugin support.\r\n\r\nIf you're developing in a Javascript framework like [Sencha Touch](http://www.sencha.com/products/touch) or [jQuery Mobile](http://jquerymobile.com/) using [PhoneGap](http://phonegap.com/) or [Cordova](http://cordova.apache.org/) \r\nto access native device features you can now edit your source code on your computer and use this tool \r\nto immediately sync your code change for testing onto one or more mobiles devices ... all without needing to compile or redeploy your app!\r\n\r\n### Installation\r\n\r\nIf you're already developing Sencha Touch native apps with PhoneGap you probably won't have much to install.  Most existing Sencha Touch / PhoneGap developers will only need to run ... \r\n\r\n    $ [sudo] npm install -g stlive \r\n\r\n... but you might want to checkout the detailed **[Installation Guide](https://github.com/tohagan/stlive/blob/master/INSTALL.md)** to make sure you've got everything - particularly before logging an [issue](https://github.com/tohagan/stlive/issues).\r\n\r\n### Description\r\n\r\nTraditionally when developing Sencha Touch apps on mobile and tablet devices you need to minify and repackage the Sencha source code, then recompile that with the PhoneGap framework with each platform SDK compiler and then redeploy each native app to mobile devices and emulators for testing (For Sencha apps this is done by `sencha app build -run native`). For native app development this can be a slow process that you have to repeat for each code change before you can test the change on a native device or emulator.\r\n\r\nThis tool allows you to massively speed up development of your PhoneGap and Sencha Touch native apps by **skipping** all of these steps!\r\n\r\nUsing this tool you can update any Javascript, CSS, SCSS or HTML source file on your development computer and it will instantly load your changes and restart the app on your device or emulators. This means you can live edit and test changes as you save them onto multiple devices! It even preserves the current client side route so in most cases you can immediately retest the active view without having to re-navigate to that view.\r\n\r\nThis means you can place any number of devices/emulators in front of you and instantly see the effect of your last code change one or more Android, iOS and WP8 devices!  You can even serve up your source code from your local computer onto a cloud based [mobile device testing lab](https://google.com?q=mobile+device+testing+lab) to test your app on hundreds of different mobile devices.  \r\n\r\nYou can also keep your remote debuggers connected while each update occurs so you save more time by not having to restart your remote debuggers.  Since the Javascript source code is not minified, it's also much easier to debug. You can also elect to load the original unminified Sencha Touch framework files onto the device making debugging of framework code easier.\r\n\r\nWe've even added integrated a SASS -> CSS compiler so you can now live edit your SASS files (`*.scss`) and they will be auto compiled and resulting `app.css` file auto reloaded. So you can now instantly review each styling change on multiple real devices or emulators.\r\n\r\nWe also make it dead easy to get started with native apps. Using a single command you can create, compile, deploy and run a new live editable Sencha Touch native app directly onto any USB attached devices, emulators and simulators. If you're new to Sencha Touch there's even a detailed Installation Guide and step by step Getting Started guide. \r\n\r\n### The Problem\r\n\r\nThe PhoneGap team recently released [PhoneGap Developer App](http://app.phonegap.com/) that supports live updating of source code in a PhoneGap 3.x project. The current PhoneGap Developer App is available as a download from the app stores. It's great for trying out PhoneGap with a standard set of core plugins but unfortunately it is unusable for many production projects as you're locked into a fixed set of PhoneGap plugins as deployed in their app store application. These plugins typically don't match types of plugins or plugin versions or internal customisations required by your app. You also can't use any internally developed plugins.\r\n\r\nWhat you really need is a live update client and server that have identical plugins to your final mobile app. For Sencha Touch development you also need additional features and optimisations not supported by the current PhoneGap Developer App project.\r\n\r\n### The Solution\r\n\r\nTo solve this, I created **stlive** to create, modify and serve live editable Sencha Touch or other PhoneGap based JS framework projects.\r\n\r\nThis tool allows you to instrument a new or existing mobile project to support live updating. On startup your instrumented mobile app will offer you options to either (a) run your existing fully compiled and minified native app or (b) start up a live update client that connects to an `stlive` server that can dispatch your original unmodified HTML/CCS/JS source code from your project folder onto the device.  It also dispatches platform specific code (e.g. Cordova plugin javascript) from **your app project**. The `stlive` server then watches for any changes in your source code files and will notify the client to reload your project source code and restart your app whenever you change a source file.\r\n\r\nUnlike the current PhoneGap Developer App, the live update client and server components and your final native app are now running identically configured Cordova plugins since they are all using the same PhoneGap project instance to do so.  For testing purposes you can be assured that the native app and live update client will be running identical PhoneGap configurations since they are now compiled and deployed as one app and the server is dispatching the same plugin source code.\r\n\r\nUsing this tool you should be able to complete most of your development and testing using the live update client, only needing to rebuild and redeploy when your project's Cordova plugin configuration is changed.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}